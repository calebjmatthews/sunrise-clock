2018-09-29 Broad steps:
A. Physical Assembly
  1. Research soldering wire onto prototype board
  2. Clip existing test plug from LED strip
  3. Attach ribbon to RP GPIO header
  4. Solder wire from LED strip onto prototype board, per:
    - https://learn.adafruit.com/digital-led-strip/wiring, and
    - https://github.com/longjos/RPi-LPD8806
  5. Test
  Wait, maybe no soldering, breadboard instead!?

2018-10-11 Broad steps:
A. Physical Assembly
  1. Clip existing test plug from LED strip
  2. Attach ribbon to RP GPIO header
  3. Use breadboard to route LED strip into prototype board, per:
  - https://github.com/longjos/RPi-LPD8806
  4. Test
  5. If non-functional, remove test wires from LED strip and solder new wires
  6. Test direct wire connections with jumper wires and test wires from LED
  strip
  7. Solder jumper wires together with LED strip wires
  8. Wrap LED strip into housing

B. Software
  1. Flask server
  2. LED drivers
  3. Read alarm time if existing
  4. Set alarm time and save in txt file
  5. Calculate second diff between current time and alarm time
  6. Set deferred task until seconds elapse
  7. Array of rgb values
  8. Move between rgb values (with some randomness between LEDs)
  9. Move with a configurable delay between timesteps
  10.Auto shutdown after a minute of full light
  11.Shutdown command route on flask server

Timing logic:
1. Pull or set hour for alarm
2. Check if hour is in the future for the current day
3. If so, calculate diff between this datetime and the current datetime
4. If not, calculate diff between the datetime tomorrow and the current datetime
5. Set a sleep() timer to expire at the end of this diff

LED logic:
- Array of 10 different rgb values, beginning at #000, ending at a yellowish #fff
- Each led has a different randomized endpoint, +/- X% difference between it and min/max
- Change leds ten times per second (sleep(.1)), calculate floor() of time difference between time elapsed since last rgb value and total time/10
